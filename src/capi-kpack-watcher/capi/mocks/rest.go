// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	io "io"
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// Rest is an autogenerated mock type for the Rest type
type Rest struct {
	mock.Mock
}

// Patch provides a mock function with given fields: url, authToken, body
func (_m *Rest) Patch(url string, authToken string, body io.Reader) (*http.Response, error) {
	ret := _m.Called(url, authToken, body)

	var r0 *http.Response
	if rf, ok := ret.Get(0).(func(string, string, io.Reader) *http.Response); ok {
		r0 = rf(url, authToken, body)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, io.Reader) error); ok {
		r1 = rf(url, authToken, body)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
