apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "capi-k8s-release.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "capi-k8s-release.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "capi-k8s-release.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: pre-start
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - /cloud_controller_ng/pre-start.sh
          volumeMounts:
          - name: cloud-controller-ng-yaml
            mountPath: /config
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # ports:
          #   - name: http
          #     containerPort: 80
          #     protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: server-sock
            mountPath: /data/cloud_controller_ng
          - name: cloud-controller-ng-yaml
            mountPath: /config
          # - name: uaa-certs
          #   mountPath: /config/uaa/certs
        - name: nginx
          image: "nginx"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: 80
          volumeMounts:
          - name: nginx
            mountPath: /etc/nginx
            readOnly: true
          - name: server-sock
            mountPath: /data/cloud_controller_ng
          - name: nginx-logs
            mountPath: /cloud_controller_ng
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: server-sock
        emptyDir: {}
      - name: cloud-controller-ng-yaml
        configMap:
          name: cloud-controller-ng-yaml
      # TODO: use a single CA for everything plz
      # - name: uaa-certs
      #   secret:
      #     secretName: uaa-certs
      - name: nginx
        configMap:
          name: nginx
      - name: nginx-logs
        emptyDir: {}
